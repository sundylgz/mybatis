<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

    <!-- mybatis运行环境 -->
    <!-- 配置会话工厂，由spring管理 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- mybatis全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"></property>
    </bean>


    <!-- 通过代理对象方法生成mapper实现对象
    此种方法需要每个mapper进行配置，麻烦，不使用此方法
     -->
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <!--  指定mapper地址-->
        <property name="mapperInterface" value="com.sundy.mapper.UserMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- 使用mapper自动扫描器
    自动将mapper包中的mapper扫描出来，注册到spring容器中，bean的id是mapper的类名(第一个字母小写)
    -->
    <!--  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
          &lt;!&ndash; 指定mapper扫描的包 &ndash;&gt;
          <property name="basePackage" value="cn.itcast.ssm.dao.mapper"></property>
          <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
      </bean>-->

</beans>